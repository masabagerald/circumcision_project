# Generated by Django 4.2 on 2023-10-14 12:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdverseEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('details', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CircumcisionMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CircumcisionProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_circumcision', models.DateField(blank=True, null=True)),
                ('local_anesthesia_lignocaine', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('local_anesthesia_bupivicaine', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('emla_cream_used', models.BooleanField(default=False)),
                ('other_procedure_type', models.CharField(blank=True, max_length=255, null=True)),
                ('ring_size', models.CharField(blank=True, max_length=255, null=True)),
                ('circumciser_name', models.CharField(blank=True, max_length=255, null=True)),
                ('circumciser_cadre', models.CharField(blank=True, max_length=255, null=True)),
                ('adverse_events_during_procedure', models.BooleanField(default=False)),
                ('severity_of_adverse_event', models.CharField(blank=True, choices=[('moderate', 'Moderate'), ('severe', 'Severe')], max_length=10, null=True)),
                ('treatment_given', models.TextField(blank=True, null=True)),
                ('blood_pressure', models.CharField(blank=True, max_length=20, null=True)),
                ('pulse', models.PositiveIntegerField(blank=True, null=True)),
                ('respiratory_rate', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('nin', models.CharField(max_length=255, verbose_name='National ID Number')),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('education_level', models.CharField(choices=[('none', 'None'), ('pre_primary', 'Pre-primary'), ('primary', 'Primary'), ('o_level', 'O-level'), ('a_level', 'A-level')], default='none', max_length=50)),
                ('marital_status', models.CharField(choices=[('never_married', 'Never Married'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed')], max_length=50)),
                ('district_of_residence', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_county', models.CharField(max_length=255)),
                ('parish', models.CharField(max_length=255)),
                ('village', models.CharField(max_length=255)),
                ('client_phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('next_of_kin_name', models.CharField(max_length=255)),
                ('next_of_kin_phone_number', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProcedureType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('details', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Tribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='VisitType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Surgery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_circumcision', models.DateField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circumcision.client')),
                ('method_of_circumcision', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circumcision.circumcisionmethod')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knows_hiv_status', models.BooleanField(default=False)),
                ('tested_hiv_last_four_weeks', models.BooleanField(default=False)),
                ('tested_hiv_this_appointment', models.BooleanField(default=False)),
                ('hiv_status', models.CharField(blank=True, max_length=20, null=True)),
                ('in_hiv_care_or_referred', models.BooleanField(default=False)),
                ('partner_hiv_status', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_td1', models.DateField(blank=True, null=True)),
                ('date_of_td2', models.DateField(blank=True, null=True)),
                ('bleeding_disorder', models.BooleanField(default=False)),
                ('genital_ulcers', models.BooleanField(default=False)),
                ('urethral_discharge', models.BooleanField(default=False)),
                ('penile_warts', models.BooleanField(default=False)),
                ('swelling_of_scrotum', models.BooleanField(default=False)),
                ('hypertension', models.BooleanField(default=False)),
                ('anaemia', models.BooleanField(default=False)),
                ('diabetes', models.BooleanField(default=False)),
                ('hiv_aids', models.BooleanField(default=False)),
                ('other_conditions', models.TextField(blank=True, null=True)),
                ('has_allergies', models.BooleanField(default=False)),
                ('allergies_description', models.TextField(blank=True, null=True)),
                ('blood_pressure', models.CharField(blank=True, max_length=20, null=True)),
                ('pulse', models.PositiveIntegerField(blank=True, null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('respiratory_rate', models.PositiveIntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('urethra_discharge', models.BooleanField(default=False)),
                ('adhesions', models.BooleanField(default=False)),
                ('genital_ulcer_disease', models.BooleanField(default=False)),
                ('genital_warts', models.BooleanField(default=False)),
                ('surgical_disorders', models.BooleanField(default=False)),
                ('other_sti_or_abnormality', models.BooleanField(default=False)),
                ('open_wounds_or_recently_healed_scars', models.BooleanField(default=False)),
                ('jiggers', models.BooleanField(default=False)),
                ('other_physical_exam_conditions', models.TextField(blank=True, null=True)),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medical_history', to='circumcision.client')),
            ],
        ),
        migrations.CreateModel(
            name='FollowUpVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follow_up_dates', models.DateField(blank=True, null=True)),
                ('wound_status', models.CharField(blank=True, choices=[('healing', 'Healing'), ('infected', 'Infected'), ('other', 'Other')], max_length=20, null=True)),
                ('presence_of_adverse_event', models.BooleanField(default=False)),
                ('severity_of_adverse_event', models.CharField(blank=True, choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe')], max_length=10, null=True)),
                ('treatment_given', models.TextField(blank=True, null=True)),
                ('circumcision_procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_up_visits', to='circumcision.circumcisionprocedure')),
                ('type_of_adverse_event', models.ManyToManyField(blank=True, null=True, to='circumcision.adverseevent')),
                ('visit_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circumcision.visittype')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='religion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circumcision.religion'),
        ),
        migrations.AddField(
            model_name='client',
            name='tribe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circumcision.tribe'),
        ),
        migrations.AddField(
            model_name='circumcisionprocedure',
            name='client',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='circumcision_procedure', to='circumcision.client'),
        ),
        migrations.AddField(
            model_name='circumcisionprocedure',
            name='procedure_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circumcision.proceduretype'),
        ),
        migrations.AddField(
            model_name='circumcisionprocedure',
            name='type_of_adverse_event',
            field=models.ManyToManyField(blank=True, null=True, to='circumcision.adverseevent'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('medication', models.TextField(blank=True, null=True)),
                ('appointment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circumcision.appointmenttype')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circumcision.client')),
            ],
        ),
    ]
